// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}
model Job {
  id                    Int    @id @default(autoincrement())
  ext_id                String
  company_id            Int
  company_name          String
  company_logo          String?
  company_website_url   String?
  company_linkedin_url  String?
  company_twitter_handle String?
  company_github_url    String?
  job_title             String
  location              String
  type_id               Int
  type_name             String
  city_geonameid        Int?
  city_asciiname        String?
  city_name             String?
  city_country_code     String?
  city_country_name     String?
  city_country_region_id Int?
  city_country_region_name String?
  city_timezone         String?
  city_latitude         String?
  city_longitude        String?
  country_code          String?
  country_name          String?
  country_region_id     Int?
  country_region_name   String?
  region_id             Int?
  region_name           String?
  has_remote            Boolean?
  published             DateTime
  description           String
  experience_level      String?
  application_url       String
  language              String
  clearance_required    Boolean
  salary_min            Float?
  salary_max            Float?
  salary_currency       String?
}




// model Job {
//   id                Int       @id
//   ext_id            String
//   companyId         Int
//   title             String
//   location          String
//   has_remote        Boolean
//   published         DateTime
//   description       String
//   experience_level  String
//   application_url   String
//   language          String
//   clearance_required Boolean
//   salary_min        Float?
//   salary_max        Float?
//   salary_currency   String?
//   company           Company   @relation(fields: [companyId], references: [id])
//   types             JobType[]
//   cities            City[]
//   countries         Country[]
//   regions           Region[]
// }

// model Company {
//   id             Int      @id
//   name           String
//   logo           String
//   website_url    String
//   linkedin_url   String
//   twitter_handle String?
//   github_url     String?
//   jobs           Job[]
// }

// model JobType {
//   id     Int    @id
//   name   String
//   jobId  Int
//   job    Job    @relation(fields: [jobId], references: [id])
// }

// model City {
//   geonameid  Int      @id
//   asciiname  String
//   name       String
//   countryId  String
//   timezone   String
//   latitude   String
//   longitude  String
//   jobId      Int
//   job        Job      @relation(fields: [jobId], references: [id])
//   country    Country  @relation(fields: [countryId], references: [code])
// }

// model Country {
//   code      String  @id
//   name      String
//   regionId  Int
//   region    Region  @relation(fields: [regionId], references: [id])
//   cities    City[]
//   jobs      Job[]
// }

// model Region {
//   id    Int      @id
//   name  String
//   countries Country[]
//   jobs      Job[]
// }